plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dev.flutter.flutter-gradle-plugin"
    // 若你有用 Crashlytics，這裡也可以加：
    // id "com.google.firebase.crashlytics"
}

def localProperties = new java.util.Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { r -> localProperties.load(r) }
}

def flutterVersionCodeStr = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName    = localProperties.getProperty('flutter.versionName') ?: '1.0'

def devKeystoreProperties  = new java.util.Properties()
def devFile = rootProject.file('dev/dev.properties')
if (devFile.exists()) {
    devKeystoreProperties.load(new java.io.FileInputStream(devFile))
}
def prodKeystoreProperties = new java.util.Properties()
def prodFile = rootProject.file('prod/prod.properties')
if (prodFile.exists()) {
    prodKeystoreProperties.load(new java.io.FileInputStream(prodFile))
}

android {
    namespace "com.mirrortv.mnews"
    compileSdkVersion 34

    sourceSets { main.java.srcDirs += 'src/main/kotlin' }

    // AGP 8 需 Java/Kotlin 17
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions { jvmTarget = '17' }

    lint {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    defaultConfig {
        applicationId "com.mirrortv.mnews"
        minSdkVersion 23
        targetSdkVersion 34
        multiDexEnabled true
        versionCode flutterVersionCodeStr.toInteger()
        versionName flutterVersionName
        ndkVersion "25.1.8937393"
        ndk { debugSymbolLevel 'FULL' }
    }

    signingConfigs {
        dev {
            if (System.getenv()["CI"]) {
                storeFile file(System.getenv()["FCI_KEYSTORE_PATH"])
                storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
                keyAlias System.getenv()["FCI_KEY_ALIAS"]
                keyPassword System.getenv()["FCI_KEY_PASSWORD"]
            } else {
                keyAlias devKeystoreProperties['keyAlias']
                keyPassword devKeystoreProperties['keyPassword']
                storeFile devKeystoreProperties['storeFile'] ? file(devKeystoreProperties['storeFile']) : null
                storePassword devKeystoreProperties['storePassword']
            }
        }
        prod {
            if (System.getenv()["CI"]) {
                storeFile file(System.getenv()["FCI_KEYSTORE_PATH"])
                storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
                keyAlias System.getenv()["FCI_KEY_ALIAS"]
                keyPassword System.getenv()["FCI_KEY_PASSWORD"]
            } else {
                keyAlias prodKeystoreProperties['keyAlias']
                keyPassword prodKeystoreProperties['keyPassword']
                storeFile prodKeystoreProperties['storeFile'] ? file(prodKeystoreProperties['storeFile']) : null
                storePassword prodKeystoreProperties['storePassword']
            }
        }
    }

    flavorDimensions 'flavors'
    productFlavors {
        dev  { dimension "flavors"; applicationIdSuffix ".dev";  signingConfig signingConfigs.dev }
        prod { dimension "flavors";                              signingConfig signingConfigs.prod }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
        }
    }
}

flutter { source '../..' }

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "androidx.multidex:multidex:2.0.1"
}

// Firebase（google-services）仍使用舊式 apply
apply plugin: 'com.google.gms.google-services'
// 若上方有啟用 Crashlytics plugin，通常不需要額外 apply，保持 plugins DSL 即可
