// ── plugins 一定要在最上面 ───────────────────────────────
plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dev.flutter.flutter-gradle-plugin"
}

// ── 讀取 local.properties ───────────────────────────────
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader) }
}

// flutter versionCode / versionName，支援 fallback
def flutterVersionCodeStr = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName    = localProperties.getProperty('flutter.versionName') ?: '1.0'

// ── dev 簽章設定 ───────────────────────────────
def devKeystoreProperties = new Properties()
def devKeystoreFile = rootProject.file('dev/dev.properties')
if (devKeystoreFile.exists()) {
    devKeystoreProperties.load(new FileInputStream(devKeystoreFile))
}

// ── prod 簽章設定 ───────────────────────────────
def prodKeystoreProperties = new Properties()
def prodKeystoreFile = rootProject.file('prod/prod.properties')
if (prodKeystoreFile.exists()) {
    prodKeystoreProperties.load(new FileInputStream(prodKeystoreFile))
}

android {
    namespace "com.mirrortv.mnews"
    compileSdkVersion 35

    defaultConfig {
        applicationId "com.mirrortv.mnews"
        minSdk 24
        targetSdk 35
        versionCode flutterVersionCodeStr.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        ndkVersion "28.0.12433566"
    }

    // AGP 8 建議指定 Java/Kotlin 17
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions { jvmTarget = "17" }

    lint {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    signingConfigs {
        dev {
            if (System.getenv()["CI"]) {
                storeFile file(System.getenv()["FCI_KEYSTORE_PATH"])
                storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
                keyAlias System.getenv()["FCI_KEY_ALIAS"]
                keyPassword System.getenv()["FCI_KEY_PASSWORD"]
            } else {
                keyAlias devKeystoreProperties['keyAlias']
                keyPassword devKeystoreProperties['keyPassword']
                storeFile devKeystoreProperties['storeFile'] ? file(devKeystoreProperties['storeFile']) : null
                storePassword devKeystoreProperties['storePassword']
            }
        }
        prod {
            if (System.getenv()["CI"]) {
                storeFile file(System.getenv()["FCI_KEYSTORE_PATH"])
                storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
                keyAlias System.getenv()["FCI_KEY_ALIAS"]
                keyPassword System.getenv()["FCI_KEY_PASSWORD"]
            } else {
                keyAlias prodKeystoreProperties['keyAlias']
                keyPassword prodKeystoreProperties['keyPassword']
                storeFile prodKeystoreProperties['storeFile'] ? file(prodKeystoreProperties['storeFile']) : null
                storePassword prodKeystoreProperties['storePassword']
            }
        }
    }

    // Flavors
    flavorDimensions "flavors"
    productFlavors {
        dev {
            dimension "flavors"
            applicationIdSuffix ".dev"
            signingConfig signingConfigs.dev
        }
        prod {
            dimension "flavors"
            signingConfig signingConfigs.prod
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    // ✅ 正確的 abi 設定（替代 ndk { abiFilters }）
    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a", "arm64-v8a"
            universalApk false
        }
    }

    // ✅ 支援 Android 16KB page size
    packagingOptions {
        jniLibs {
            useLegacyPackaging = false
        }
    }
}

// Flutter Gradle Plugin
flutter {
    source "../.."
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "androidx.multidex:multidex:2.0.1"
}

// Firebase（google-services）
apply plugin: "com.google.gms.google-services"
